# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI-Master Build

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'README*'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'README*'
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [
          { 'version': '11', 'opts': '' },
          { 'version': '17', 'opts': '' }
        ]
    steps:
    - uses: actions/checkout@v3
    - name: Build with Java ${{ matrix.java.version }} (temurin)
      uses: actions/setup-java@v3
      with:
        java-version: ${{matrix.java.version}}
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven, Java ${{ matrix.java.version }}
      run: mvn -B package --file pom.xml -Dmaven.compiler.source=${{ matrix.java.version }} -Dmaven.compiler.target=${{ matrix.java.version }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  sonar-build:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - uses: radcortez/project-metadata-action@main
      name: Retrieve project metadata from '.github/project.yml'
      id: metadata
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        metadata-file-path: '.github/project.yml'
        local-file: true
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify -Psonar -Dsonar.projectKey=${{steps.metadata.outputs.sonar-project-key}} sonar:sonar

  deploy-snapshot:
    needs: sonar-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: sonatype-nexus-snapshots
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        cache: maven

    - name: Extract project version
      id: project
      run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

    - name: Deploy Snapshot with Maven, version ${{ steps.project.outputs.version }}
      if: ${{endsWith(steps.project.outputs.version, '-SNAPSHOT')}}
      run: |
        mvn -B -Pjavadoc javadoc:javadoc
        mvn -B -Prelease-snapshot deploy -Dmaven.test.skip=true
      env:
        MAVEN_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.OSS_SONATYPE_PASSWORD }}