/*
 * Copyright ¬© 2025 CUI-OpenSource-Software (info@cuioss.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.cuioss.tools.security.http.generators.injection;

import de.cuioss.test.generator.Generators;
import de.cuioss.test.generator.TypedGenerator;

/**
 * Generator for Internationalized Domain Name (IDN) attack patterns.
 * 
 * <p><strong>CRITICAL UNICODE SECURITY DATABASE:</strong> This generator contains IDN-specific
 * attack patterns that exploit Unicode homograph vulnerabilities, punycode encoding exploits,
 * and visual domain spoofing techniques. Each pattern uses exact Unicode character sequences
 * that are visually deceptive to humans but distinct to security systems.</p>
 * 
 * <p><strong>QI-6 CONVERSION STATUS:</strong> NOT SUITABLE for dynamic conversion. 
 * IDN/homograph attacks require exact Unicode character pairs where visual similarity
 * is critical (e.g., Cyrillic '–∞' vs Latin 'a'). These precise character sequences
 * cannot be algorithmically generated without losing attack effectiveness.</p>
 * 
 * <h3>Unicode Homograph Attack Database</h3>
 * <ul>
 *   <li><strong>Cyrillic homographs:</strong> {@code –∞pple.com} - Cyrillic '–∞' (U+0430) vs Latin 'a' (U+0061)</li>
 *   <li><strong>Punycode exploitation:</strong> {@code xn--pple-43d.com} - ASCII-compatible encoding of Cyrillic domains</li>
 *   <li><strong>Mixed script attacks:</strong> {@code goog1–µ.com} - Combining Latin and Cyrillic characters</li>
 *   <li><strong>Armenian punctuation:</strong> {@code twitter‚Ä§com} - Armenian full stop (U+2024) vs period (U+002E)</li>
 *   <li><strong>Right-to-left override:</strong> {@code paypal‚ÄÆmoc.com} - RTL override (U+202E) manipulation</li>
 *   <li><strong>Zero-width exploits:</strong> {@code google‚Äã.com} - Zero-width space (U+200B) insertion</li>
 *   <li><strong>Unicode normalization:</strong> {@code caf√©.com} - Composed vs decomposed character forms</li>
 * </ul>
 * 
 * <h3>IDN Attack Mechanics</h3>
 * <ul>
 *   <li><strong>Visual deception:</strong> Characters that look identical but have different Unicode code points</li>
 *   <li><strong>Punycode bypass:</strong> ASCII encoding of international characters bypasses ASCII-only filters</li>
 *   <li><strong>Script mixing:</strong> Combining characters from different writing systems</li>
 *   <li><strong>Invisible characters:</strong> Zero-width and control characters for steganographic attacks</li>
 *   <li><strong>Normalization exploits:</strong> Different Unicode normalizations of the same visual appearance</li>
 * </ul>
 * 
 * <p><strong>PRESERVATION RATIONALE:</strong> IDN attacks depend on exact Unicode character
 * relationships defined by the Unicode Consortium. Each homograph pair (e.g., Cyrillic –∞ vs 
 * Latin a) represents a specific visual vulnerability that must be preserved exactly.
 * Algorithmic generation cannot reproduce these precise linguistic and visual relationships
 * required for effective homograph attack testing.</p>
 * 
 * Implements: Task G-IDN from HTTP verification test generators
 * 
 * @author Claude Code Generator  
 * @since 2.5
 */
public class IDNAttackGenerator implements TypedGenerator<String> {

    private final TypedGenerator<String> idnAttackPatterns = Generators.fixedValues(
            // Homograph attacks - visually similar characters
            "http://–∞pple.com/../../../etc/passwd",           // Cyrillic '–∞' instead of Latin 'a'
            "http://g–æ–ægle.com/admin/../../config",          // Cyrillic '–æ' instead of Latin 'o'
            "http://mi—Årosoft.com/../../etc/hosts",          // Cyrillic '—Å' instead of Latin 'c'
            "http://–∞mazon.com/../sensitive/data",           // Cyrillic '–∞' instead of Latin 'a'
            "http://f–∞cebook.com/../../admin/config",        // Cyrillic '–∞' instead of Latin 'a'
            "http://—Ä–∞ypal.com/../../../etc/passwd",         // Cyrillic '—Ä' and '–∞'
            
            // Punycode exploitation
            "http://xn--pple-43d.com/../../../etc/passwd",   // Punycode for –∞pple (Cyrillic –∞)
            "http://xn--e1afmkfd.com/../../config",         // Punycode for –ø—Ä–∏–º–µ—Ä
            "http://xn--fsq.com/admin/../../etc/hosts",     // Punycode for ‰∏≠
            "http://xn--nxasmq6b.com/../sensitive",         // Punycode for ÊµãËØï
            "http://xn--80akhbyknj4f.com/../../admin",      // Punycode for –∏—Å–ø—ã—Ç–∞–Ω–∏–µ
            "http://xn--wgbl6a.com/../../../etc/passwd",    // Punycode for ÿ™ÿ≥ÿ™
            
            // Mixed script attacks
            "http://goog1–µ.com/../../etc/passwd",           // Latin + Cyrillic
            "http://–∞pp1e.com/admin/../config",             // Cyrillic + Latin + number
            "http://micro5–æft.com/../../etc/hosts",         // Mixed Latin/Cyrillic with number
            "http://–∞m–∞z–æn.com/../sensitive/data",          // Multiple Cyrillic substitutions
            "http://twitter‚Ä§com/../../admin",               // Armenian full stop instead of period
            "http://instagram‚Äßcom/../../../etc/passwd",      // Hyphenation point instead of period
            
            // Unicode normalization bypass
            "http://caf√©.com/../../../etc/passwd",          // √© (single character)
            "http://cafe\\u0301.com/../../config",         // e + combining acute accent
            "http://na√Øve.com/admin/../etc/hosts",          // √Ø (single character) 
            "http://nai\\u0308ve.com/../../sensitive",     // i + combining diaeresis
            "http://r√©sum√©.com/../../../admin",            // Multiple accented characters
            "http://re\\u0301sume\\u0301.com/config",      // Combining characters
            
            // Right-to-left override attacks
            "http://evil‚ÄÆmoc.elgoog.com/../../etc/passwd", // RTL override
            "http://‚ÄÆmoc.elgoog.com/admin/../config",      // RTL override at start
            "http://google‚ÄÆevil.com/../../etc/hosts",      // RTL override in middle
            "http://legitimate‚ÄÆ.evil.com/../sensitive",     // RTL spoofing
            "http://‚Ä≠secure‚ÄÆ.fake.com/../../admin",        // LTR + RTL override
            
            // Zero-width and invisible character attacks
            "http://goo‚Äãgle.com/../../../etc/passwd",       // Zero-width space
            "http://micro‚Äåsoft.com/../../config",          // Zero-width non-joiner
            "http://ama‚Äçzon.com/admin/../etc/hosts",        // Zero-width joiner
            "http://faceÔªøbook.com/../../sensitive",        // Zero-width no-break space
            "http://twit¬≠ter.com/../../../admin",          // Soft hyphen
            "http://insta‚Äågram.com/../../etc/passwd",      // Zero-width non-joiner
            
            // Bidirectional text attacks
            "http://‚ÄÆsecure-bank.com/../../etc/passwd",    // RTL override
            "http://safe‚ÄÆ-evil.com/admin/../config",       // RTL in middle
            "http://‚Ä™legitimate‚Ä¨.fake.com/../../etc/hosts", // LTR/RTL embedding
            "http://‚Ä´trustworthy‚Ä¨.malicious.com/../sensitive", // RLM/LRM markers
            
            // Unicode confusables
            "http://ÔΩáoogle.com/../../../etc/passwd",       // Full-width Latin
            "http://ùó¥ùóºùóºùó¥ùóπùó≤.com/../../config",              // Mathematical bold
            "http://ùëîùëúùëúùëîùëôùëí.com/admin/../etc/hosts",         // Mathematical italic
            "http://ùíàùíêùíêùíàùíçùíÜ.com/../../sensitive",          // Mathematical script
            "http://ùî§ùî¨ùî¨ùî§ùî©ùî¢.com/../../../admin",           // Mathematical fraktur
            
            // Domain with path traversal and IDN
            "http://—Çest.com/../../../etc/passwd",         // Cyrillic —Ç
            "http://–µxample.org/../../admin/config",       // Cyrillic –µ
            "http://—ïample.net/admin/../etc/hosts",        // Cyrillic —ï
            "http://d–µmo.info/../../sensitive/data",       // Cyrillic –µ
            "http://t–µ—ït-site.com/../../../etc/passwd",    // Mixed Cyrillic
            
            // Subdomain IDN attacks
            "http://–∞dmin.example.com/../../etc/passwd",   // Cyrillic subdomain
            "http://—ïecure.site.com/admin/../config",      // Cyrillic subdomain
            "http://—Ärivate.domain.org/../../etc/hosts",   // Cyrillic subdomain
            "http://—ñnternal.test.net/../sensitive",       // Cyrillic —ñ
            
            // Port confusion with IDN
            "http://g–æ–ægle.com:8080/../../../etc/passwd",  // Cyrillic –æ with port
            "http://–∞pple.com:443/../../admin/config",     // Cyrillic –∞ with SSL port
            "http://mi—Årosoft.com:80/admin/../etc/hosts",  // Cyrillic —Å with HTTP port
            
            // Protocol confusion with IDN
            "https://—Ä–∞ypal.com/../../../etc/passwd",      // HTTPS with Cyrillic
            "ftp://–∞mazon.com/../../admin/config",         // FTP with Cyrillic
            "http://f–∞cebook.com/../etc/hosts",            // HTTP with Cyrillic
            
            // Complex IDN with multiple vulnerabilities
            "http://xn--e1afmkfd.com:8080/../../../etc/passwd", // Punycode + port + path traversal
            "https://goog1–µ.com/admin/../../config",           // HTTPS + mixed script + traversal
            "http://–∞pp‚Äåle.com/../sensitive/data",              // Cyrillic + zero-width + traversal
            "http://‚ÄÆmoc.elgoog.com:443/../../admin"           // RTL + port + path traversal
    );

    @Override
    public String next() {
        return idnAttackPatterns.next();
    }

    @Override
    public Class<String> getType() {
        return String.class;
    }
}